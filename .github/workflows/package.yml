name: Publish package to GitHub Packages
on:
  push:
    branches:
      - main
jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      
      # Step to get the latest version from GitHub Packages
      - name: Get latest version from GitHub Packages
        id: get_version
        run: |
          response=$(curl -s -H "Authorization: Bearer ${{ secrets.GIT_TOKEN }}" -H "Accept: application/vnd.github.v3+json" https://api.github.com/packages/{package_type}/{package_name}/versions/latest)
          version=$(echo $response | jq -r '.version')
          echo "::set-output name=latest_version::$version"
        env:
          package_type: "maven" # Adjust this based on your package type (e.g., maven, npm, docker)
          package_name: "org.nttdata:front-end-framework" # Adjust this based on your package name
          
      # Step to generate a new version based on the latest version
      - name: Generate new version
        run: |
          latest_version="${{ steps.get_version.outputs.latest_version }}"
          IFS='.' read -r -a version_parts <<< "$latest_version"
          major=${version_parts[0]}
          minor=${version_parts[1]}
          patch=${version_parts[2]}
          new_patch=$((patch + 1))
          new_version="$major.$minor.$new_patch"
          echo "::set-output name=new_version::$new_version"
          
      - uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          
      - name: Publish package
        run: mvn --batch-mode deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
